/* ./assets/css/style.css, made to get styles to actually cascade, like a whole sheet of them ;) */

@font-face { /*yes, it's correct for font-face to go at the top, above the tailwind directives section below*/
	font-family: 'Diatype Rounded';
	src: url('/fonts/ABCDiatypeRounded-Regular-Trial.woff2') format('woff2');
	font-weight: 400; /* this file is one weight; regular is 400 */
	font-display: swap; /* show text with a fallback font until the browser loads this custom font */
}
@font-face {
	font-family: "Lemon Wide";
	src: url('/fonts/Lemon-Wide.woff2') format('woff2');
	font-weight: 400; /*ttd july, not sure if name and weight are correct for the given woff2 file*/
	font-display: swap; /* show text with a fallback font until the browser loads this custom font */
}

/* tailwind directives; when tailwind builds our css, it replaces these three with the generated stylesheet in these three layers */
@tailwind base;       /* "preflight" resets + any base-layer styles */
@tailwind components; /* component classes (e.g. form styles, if you enabled the forms plugin) */
@tailwind utilities;  /* all the utility classes (e.g. .text-center, .mt-4, etc.) */

@layer base {
	html, body {
		@apply bg-white text-gray-800 font-sans;
	}

	/* A global container class if you want consistent margins */
	.page-container {
		@apply mx-auto max-w-screen-md p-4 pb-0; /* centered, medium width, padding */
	}
	/* ^ttd july, you realize now you should probably move this into ./layouts/column-layout.vue */

	pre, code {
		@apply font-mono text-sm text-gray-400 font-bold;
	}

	a               { @apply text-blue-600 underline; }
	a:hover         { @apply text-blue-400; }
	a:visited       { @apply text-purple-600; }
	a:visited:hover { @apply text-purple-400; }
	a:active        { @apply text-red-800; }

	/* For all disabled buttons, use the default arrow instead of a hand pointer */
	button:disabled {
		@apply cursor-default;
	}
}

/* Components layer: define reusable classes for buttons, etc. */
@layer components {
	/* ttd july, you realize now instad of defining these styles here (globally, so that they're available everywhere) and using them in many different components, you should move these into the pushy and linky components, and then use those components everywhere. there might be styles that you want to set once globally and cascade down into several different components, but these are not them, you now suspect */

	/* A standard button class */
	.pushy {
		@apply inline-flex items-center bg-green-600 text-white px-2 py-1 rounded;
		@apply hover:bg-green-400 cursor-pointer;
	}
	.pushy:focus {
		@apply outline-none ring-2 ring-blue-500;
	}

	/* A button that looks and acts like a link */
	.linky {
		@apply bg-transparent border-none p-0 text-blue-600 underline cursor-pointer;
		
		/* We override any base button hover styles with transparent background */
		&:hover {
			@apply text-blue-400 bg-transparent;
		}
	}

	/* A link that looks & acts like a “pushy” button in every state */
	.pushy-link,
	.pushy-link:visited,
	.pushy-link:hover,
	.pushy-link:visited:hover,
	.pushy-link:focus,
	.pushy-link:visited:focus,
	.pushy-link:active,
	.pushy-link:visited:active {
		@apply inline-flex items-center bg-green-600 text-white no-underline px-2 py-1 rounded;
		cursor: pointer;
	}
	/* hover background (text stays white) */
	.pushy-link:hover,
	.pushy-link:visited:hover {
		@apply bg-green-400;
	}
	/* active background */
	.pushy-link:active,
	.pushy-link:visited:active {
		@apply bg-green-700;
	}
	/* focus ring */
	.pushy-link:focus,
	.pushy-link:visited:focus {
		@apply outline-none ring-2 ring-blue-500;
	}
	/* ttd april ^ clean this up, obviously */
}
